console.log("-=sudokusolver=-");

var solution = [
[ 0, 0, 0, 4, 0, 5, 0, 0, 0 ],
[ 0, 9, 0, 8, 0, 1, 0, 7, 0 ],
[ 2, 0, 0, 9, 6, 3, 0, 0, 8 ],
[ 0, 0, 7, 0, 0, 0, 3, 0, 0 ],
[ 5, 0, 8, 0, 0, 0, 4, 0, 1 ],
[ 0, 0, 6, 0, 0, 0, 8, 0, 0 ],
[ 7, 0, 0, 5, 1, 6, 0, 0, 3 ],
[ 0, 4, 0, 7, 0, 2, 0, 5, 0 ],
[ 0, 0, 0, 3, 0, 9, 0, 0, 0 ]];

var pencilMarks =  [
[ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 0, 0, 8, 0, 0, 0, 0, 0 ],
[ 0, 0, 0, 0, 0, 0, 0, 0, 8 ],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 0, 0, 0, 0, 0, 8, 0, 0 ],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 0, 0, 0, 0, 0, 0, 0, 0 ]];

var solX = [];
var solY = [];
var solSquare = [];
var X = 6; // Hvilken rubrikk sjekkes (0 - 8)
var Y = 6; // Hvilken rubrikk sjekkes (0 - 8)
var taken = []; //used numbers
var free = []; //possible solutions

for(var i = 0; i < 9; i++){
    solX[i] = solution[X][i];
    solY[i] = solution[i][Y];
    }

for(var i = (Math.floor(X/3))*3; i < (Math.floor(X/3))*3 + 3; i++){
    for (var j = (Math.floor(Y/3))*3; j < (Math.floor(Y/3))*3 + 3; j++){
        solSquare.push(solution[i][j]);
        }
}


console.log("Check:");
console.log("SolX:" + " " + solX);
console.log("SolY:" + " " + solY);
console.log("SolSquare:" + " " + solSquare);
console.log(solution[X][Y]);

var allTaken = solX.concat(solY,solSquare); //variable allTaken will be source for validating a square
console.log(allTaken);
console.log("end");

for (var i = 1; i < 10; i++){ // function to determine if number is taken
    if(allTaken.indexOf(i) > 0){
    taken.push(i);
    } else {
    free.push(i);
    }
    
}
pencilMarks[X][Y] = free;

console.log("free" + " " + free) ;
console.log("taken" + " " + taken) ;
console.log(pencilMarks);
